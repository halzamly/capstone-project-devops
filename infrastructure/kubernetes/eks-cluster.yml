Description: Aws Cloudformation template to create Amazon Elastic Kubernetes Service (EKS) cluster

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    AllowedValues:
      - dev
      - staging
      - prod
    Default: "dev"
  ClusterName:
    Description: Name of Kubernetes Cluster
    Type: String
    Default: "capstone-udacity"

Resources:
  Cluster:
    Type: 'AWS::EKS::Cluster'
    Properties:
      Name: !Sub ${EnvironmentName}-${ClusterName}
      RoleArn: !GetAtt ClusterRole.Arn
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !Ref SecurityGroup
        SubnetIds:
          Fn::Split:
            - ","
            - Fn::ImportValue:
                !Sub ${EnvironmentName}-PUB-NETS

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:  !ImportValue
        'Fn::Sub': '${EnvironmentName}-VPCID'
      GroupName: !Sub ${EnvironmentName}-eksSecurityGroup
      GroupDescription: Default security group for EKS.
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 1025
          ToPort: 65535
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 1025
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  ClusterRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${EnvironmentName}-eksClusterRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy
        - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess